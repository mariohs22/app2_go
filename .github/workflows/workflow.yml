name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  GCP_PROJECT: app-go-terraform
  GCP_SERVICE: app-go-service2
  GCP_REGION: us-central1

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Go lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
      - name: The job has failure
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: App2_go lint job has fail.

  sec:
    name: gosec
    needs: lint
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - uses: actions/checkout@v2
      - name: Run Gosec Security scanner
        uses: securego/gosec@master
        with:
          args: ./...
      - name: The job has failure
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: App2_go gosec job has fail.

  # test:
  #   needs: sec
  #   strategy:
  #     matrix:
  #       go-version: [1.16.x]
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ${{ matrix.go-version }}
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Test
  #       run: go test -v ./...
  # - name: The job has failure
  #   if: ${{ failure() }}
  #   uses: appleboy/telegram-action@master
  #   with:
  #     to: ${{ secrets.TELEGRAM_TO }}
  #     token: ${{ secrets.TELEGRAM_TOKEN }}
  #     args: App2_go test job has fail.

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: sec
    steps:
      - uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.GCP_PROJECT }}/${{ env.GCP_SERVICE }}:latest .
          docker push gcr.io/${{ env.GCP_PROJECT }}/${{ env.GCP_SERVICE }}:latest

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.4.0
        with:
          service: ${{ env.GCP_SERVICE }}
          image: gcr.io/${{ env.GCP_PROJECT }}/${{ env.GCP_SERVICE }}:latest
          region: ${{ env.GCP_REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Cleanup untagged images
        run: gcloud container images list-tags gcr.io/${{ env.GCP_PROJECT }}/${{ env.GCP_SERVICE }} --filter='-tags:*' --format="get(digest)" --limit=10 > tags && while read p; do gcloud container images delete "gcr.io/${{ env.GCP_PROJECT }}/${{ env.GCP_SERVICE }}@$p" --quiet; done < tags

      - name: The job has failure
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: App2_go CI/CD job has fail.

      - name: The job has failure
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          args: App2_go CI/CD job has succeeded. App available at ${{ steps.deploy.outputs.url }}
