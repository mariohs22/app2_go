name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: 1.16

  #     - name: Build
  #       run: go build -v ./...

  # lint:
  #   name: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run Go lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         version: latest

  # sec:
  #   name: gosec
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   env:
  #     GO111MODULE: on
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run Gosec Security scanner
  #       uses: securego/gosec@master
  #       with:
  #         args: ./...

  # test:
  #   needs: sec
  #   strategy:
  #     matrix:
  #       go-version: [1.16.x]
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: ${{ matrix.go-version }}
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Test
  #       run: go test -v ./...

  deploy:
    name: Deploy to Amazon
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
